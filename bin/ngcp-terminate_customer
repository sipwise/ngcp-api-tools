#!/usr/bin/perl
use strict;
use warnings;
use Config::Tiny;
use English;
use Getopt::Long;
use JSON qw();
use LWP::UserAgent;
use Pod::Usage;

my $config =  Config::Tiny->read('/etc/default/ngcp-api');
my $opts = {
    host => '127.0.0.1',
    port => 1443,
    auth_user => 'administrator',
    auth_pwd => 'administrator',
    verbose => 0,
    admin => 0
};

if ($config) {
    $opts->{host} = $config->{_}->{NGCP_API_IP};
    $opts->{port} = $config->{_}->{NGCP_API_PORT};
}

GetOptions( $opts,
    "help|h" => sub { pod2usage(-exitval =>0); },
    "host=s",
    "port=i",
    "auth_user=s",
    "auth_pwd=s",
    "verbose",
    "man" => sub { pod2usage(-exitval => 0, -verbose => 2); },
    "username|u=s",
    "domain|d=s",
    "account_id|i=i"
) or pod2usage(2);

die pod2usage(-exitval => 1, -message => "Missing parameters") unless
    (defined $opts->{account_id} and not defined $opts->{username} and
        not defined $opts->{domain}) or
    (defined $opts->{username} and defined $opts->{domain} and
        not defined $opts->{account_id});

sub main {
    my $urlbase = 'https://'.$opts->{host}.':'.$opts->{port};
    my $ua = LWP::UserAgent->new();
    # set to 0 if using a self-signed certificate
    $ua->ssl_opts(verify_hostname => 0);
    $ua->credentials($opts->{host}.':'.$opts->{port}, 'api_admin_http',
        $opts->{auth_user}, $opts->{auth_pwd});
    # debug!!
    if($opts->{verbose}) {
        $ua->show_progress(1);
        $ua->add_handler("request_send",  sub { shift->dump; return });
        $ua->add_handler("response_done", sub { shift->dump; return });
    }
    my $customer_url;
    if ($opts->{account_id}) {
        $customer_url = $urlbase . '/api/customers/'.$opts->{account_id};
    }
    else {
        $customer_url= get_customer_url($ua, $urlbase);
    }
    my $res = do_request($ua, $customer_url);
    if($res->is_success) {
        print $res->status_line . "\n";
    } else {
        die $res->as_string;
    }
    return;
}

sub get_customer_url {
    my $ua = shift;
    my $urlbase = shift;
    my $url = $urlbase."/api/subscribers/?domain=".$opts->{domain}.
        '&username='.$opts->{username};
    my $req = HTTP::Request->new('GET', $url);
    my $customer_url;

    my $res = $ua->request($req);
    if($res->is_success) {
        my $collection = JSON::from_json($res->decoded_content);
        if ($collection->{total_count} == 1) {
            $customer_url = $urlbase .
                $collection->{_links}->{'ngcp:customers'}->{href};
        }
        else {
            pod2usage(-exitval => 3, -message => "customer not found");
        }
    }
    else {
        die $res->as_string;
    }
    return $customer_url;
}

sub do_request {
    my $ua = shift;
    my $url = shift;
    my $data = {
      status => 'terminated',
      contact_id => 0,
      billing_profile_id => 0
    };
    my $req = HTTP::Request->new('GET', $url);
    my $res = $ua->request($req);
    if($res->is_success) {
        my $collection = JSON::from_json($res->decoded_content);
        $data->{contact_id} = $collection->{contact_id};
        $data->{billing_profile_id} = $collection->{billing_profile_id};
    }
    else {
        die $res->as_string;
    }
    $req = HTTP::Request->new('PUT', $url);
    $req->header('Content-Type' => 'application/json');
    $req->header('Prefer' => 'return=minimal');
    $req->content(JSON::to_json($data));

    return $ua->request($req);
}

main();

__END__
=head1 NAME

ngcp-terminate_customer - terminates a customer on NGCP

=head1 SYNOPSIS

ngcp-terminate_customer [options]

=head1 OPTIONS

=over 8

=item B<-help>

Print a brief help message and exits.

=item B<-auth_user>

Authentication username . Defaults to 'administrator'.

=item B<-auth_pwd>

Authentication password . Defaults to 'administrator'.

=item B<-host>

Host where the send queries. Defaults to '127.0.0.1'.

=item B<-port>

Port where the send queries. Defaults to 1443.

=item B<-account_id|i>

the unique ID of an existing account.

=item B<-username|u>

SIP username.

=item B<-domain|d>

existing domain for subscriber.

=item B<-verbose>

See debug information. Default false.

=back

=head1 DESCRIPTION

B<This program> will terminate a customer at NGCP.

=head1 USAGE

ngcp-terminate_customer -host 1.2.3.4 -d test.example.org -u test

ngcp-terminate_customer -host 1.2.3.4 -i 45

=head1 REQUIRED ARGUMENTS

B<domain> and B<username> or B<account_id>

=head1 EXIT STATUS

Exit code 0 means that everything should have went fine otherwise error.

=head1 DIAGNOSTICS

=head1 CONFIGURATION

/etc/default/ngcp-api for default values

=head1 DEPENDENCIES

ngcp-terminate_customer relies on a bunch of Perl modules, all of them specified as
dependencies through the ngcp-ossbss-clients-perl Debian package.

=head1 INCOMPATIBILITIES

No known at this time.

=head1 BUGS AND LIMITATIONS

Please report problems you notice to the Sipwise
Development Team <support@sipwise.com>.

=head1 AUTHOR

Victor Seva <vseva@sipwise.com>

=head1 LICENSE

Copyright (c) 2015 Sipwise GmbH, Austria.
All rights reserved. You may not copy, distribute
or modify without prior written permission from
Sipwise GmbH, Austria.

=head1 LICENSE AND COPYRIGHT

Copyright (c) 2015 Sipwise GmbH, Austria.
You should have received a copy of the licence terms together with the
software.

=cut
